$color-white: white;
$color-black: black;
$color-primary: #0940d6;
$color-primary-light: #6f8fd5;
$color-primary-dark: #2828b4;

$color-grey-dark: #777;
$color-white: #fff;
$color-black: #000;
$color-grey-light-1: #f7f7f7;
//GRID

$grid-width: 114rem;
$gutter-vertical: 8rem;
$gutter-horizontal: 6rem;

@mixin clearfix {
  &::after {
    content: "";
    display: table;
    clear: both;
  }
}

////////////////////////////////////////////////
////////////////////////////////////////////////
////////////////////////////////////////////////
////////////////////////////////////////////////
//////////////// DEBUGGING OVERFLOW ISSUES /////////
* {
  /* opacity: 1; */
  visibility: visibile;
}

* {
  border: 1px solid #f00;
}

////////////////////////////////////////////////
////////////////////////////////////////////////
////////////////////////////////////////////////
////////////////////////////////////////////////
////////////////////////////////////////////////
////////////////////////////////////////////////
////////////////////////////////////////////////
////////////////////////////////////////////////

/*********************
BREAKPOINTS
*********************/

@mixin breakpoint($point) {
  @if $point == desktop {
    @media (min-width: 70em) {
      @content;
    }
  } @else if $point == laptop {
    @media (min-width: 64em) {
      @content;
    }
  } @else if $point == tablet {
    @media (min-width: 50em) {
      @content;
    }
  } @else if $point == phablet {
    @media (min-width: 44.5em) {
      @content;
    }
  } @else if $point == mobileonly {
    // IHPHONe 6 -> xr xs -> 11 -> pixel xl 2
    @media (max-width: 44.5em) {
      @content;
    }
  } @else if $point == minimobileonly {
    //IPHONE 5
    @media (max-width: 21.5em) {
      @content;
    }
  }
}

*,
*::after,
*::before {
  margin: 0;
  padding: 0;
  /* box sizing border box */
  box-sizing: inherit;
  /* changing the box model so that the borders and paddings are no longer added. */
}

html {
  // THIS DEFINES WHAT 1 REM IS;;
  font-size: 62.5%;
}

body {
  box-sizing: border-box;
}

/*Browser Reset  Starting clean. */

///////////////////////////////////////////////////////////////
//////////////////////////HEADER/////////////////////////////

.header {
  height: 65vh;
  z-index: 3;
  position: relative;
  background-image: linear-gradient(
      to right bottom,
      rgba(111, 136, 213, 0.8),
      rgba(87, 40, 180, 0.8)
    ),
    url("http://sites.psu.edu/siowfa15/wp-content/uploads/sites/29639/2015/12/98178bbd-cda2-47d6-b1e2-8a02604964a0_6.jpg");
  /* background-blend-mode: overlay, hard-light, overlay, normal;
    background-size: 400% 400%;
    animation: gradient 12s ease infinite;
    clip-path: polygon(0 0, 100% 1%, 100% 70%, 0% 100%); */
  /*  // This is the origin for the absolute positioning, where top and left is counted from, (the relative box for absolute.) */
  /* position: relative; */
  background-size: cover;
  background-position: top;
  clip-path: polygon(50% 0%, 100% 0, 100% 75%, 50% 100%, 0% 80%, 0 0);
  @include breakpoint(mobileonly) {
    height: 95vh;
  }
  @include breakpoint(minimobileonly) {
    height: 95vh;
  }
  @include breakpoint(phablet) {
    height: 95vh;
  }
  @include breakpoint(tablet) {
    height: 95vh;
  }
  &__logo-box {
    position: absolute;
    top: 4rem;
    left: 4rem;
    @include breakpoint(mobileonly) {
      position: absolute;
      top: 1rem;
      left: 1rem;
    }
    @include breakpoint(minimobileonly) {
      position: absolute;
      top: 1rem;
      left: 1rem;
    }
  }

  &__text-box {
    position: absolute;
    top: 40%;
    left: 50%;
    transform: translate(-50%, -50%);
    text-align: center;
  }

  &__logo {
    color: $color-white;
    font-size: 1.5rem;
    font-weight: 100;
    /* Width scales accordingly. */
  }
}

body {
  font-family: "Lato", sans-serif;
  font-weight: 100;
  /* font-size: 16px; */
  line-height: 1.7;
  color: white;
}

.heading-primary {
  color: $color-white;
  text-transform: uppercase;

  &--main {
    /*  A span is already an inline element so we can use block here. */
    /*  block elements
        occupy the entire width that they have available.
        And more importantly for this case,
        they create line breaks after and before them. */
    display: block;
    font-size: 50px;
    font-weight: 100;
    animation-name: moveInLeft;
    animation-duration: 0.5s;
    animation-timing-function: ease-out;
    backface-visibility: hidden;

    @include breakpoint(mobileonly) {
    }
    @include breakpoint(minimobileonly) {
    }
  }

  &--sub {
    display: block;
    font-size: 20px;
    font-weight: 100;
    letter-spacing: 8.4px;
    animation-name: moveInRight;
    animation-duration: 0.5s;
    animation-timing-function: ease-out;
    backface-visibility: hidden;
    @include breakpoint(mobileonly) {
      font-size: 10px;
    }
    @include breakpoint(minimobileonly) {
      font-size: 10px;
    }
  }
}

.u-center-text {
  text-align: center;
}

.heading-secondary {
  text-transform: uppercase;
  font-weight: 700;
  font-weight: 100;
  font-size: 4rem;
  color: white;
  margin-bottom: 8px;
  letter-spacing: 6px;
}
///////////////////////////////////////////////////////////////
/////////////////////////////BUTTONS///////////////////////////
.btn {
  &:link,
  &:visited {
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    display: inline-block;
    /*  border-radius: 100px; */
    font-weight: 400;
    transition: all 0.2s;
    width: 65%;
    text-align: center;
    margin-bottom: -15%;
    margin-top: 14%;

    @include breakpoint(mobileonly) {
      margin-bottom: 15%;
      margin-top: 14%;
      width: 99%;
    }
    @include breakpoint(minimobileonly) {
      margin-bottom: 15%;
      margin-top: 14%;
      width: 99%;
    }
    @include breakpoint(phablet) {
      width: 99%;
      margin-bottom: 15%;
    }
    @include breakpoint(tablet) {
      width: 100%;
      margin-bottom: 15%;
    }
  }

  &:hover {
    transform: translateY(-3px);
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2);
    opacity: 1;
  }

  &:active {
    transform: translateY(-1px);
    box-shadow: 0 1rem 2rem rgba($color-black, 0.2);
  }

  &--about {
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 40px;
    display: inline-block;
    /*  border-radius: 100px; */
    font-weight: 400;
    transition: all 0.2s;

    &:hover {
      transform: translateY(-3px);
      box-shadow: 0 1rem 2rem rgba($color-black, 0.2);
      opacity: 1;
    }

    &:active {
      transform: translateY(-1px);
      box-shadow: 0 1rem 2rem rgba($color-black, 0.2);
    }
  }

  &--footer {
    text-transform: uppercase;
    text-decoration: none;
    padding: 15px 290px;
    display: inline-block;
    font-weight: 400;
    transition: all 0.2s;
    margin-bottom: 0px;
    position: absolute;
    /* left: 1%; */
    top: 60%;

    &:hover {
      transform: translateY(-3px);
      box-shadow: 0 1rem 2rem rgba($color-black, 0.2);
      opacity: 1;
    }

    &:active {
      transform: translateY(-1px);
      box-shadow: 0 1rem 2rem rgba($color-black, 0.2);
    }
  }

  &--black {
    background-color: transparent;
    color: $color-black;
    opacity: 0.2;
    border: $color-black 1px solid;

    &--black::after {
      background-color: $color-black;
    }
  }

  &--white {
    background-color: transparent;
    color: $color-white;
    opacity: 0.2;
    border: $color-white 1px solid;

    &--white::after {
      background-color: $color-white;
    }
  }
}

///////////////////////////////////////////////////////////////

/////////////////////////// SECTIONS /////////////////////@at-root

.section-about {
  position: relative;
  /*  clip-path: polygon(
    50% 0%,
    100% 0,
    100% 34%,
    100% 67%,
    100% 80%,
    50% 100%,
    27% 94%,
    0 88%,
    0% 34%,
    0 0
  ); */
  background-blend-mode: darken;
  background-image: url("https://d.newsweek.com/en/full/1506224/water.jpg");
  background-size: cover;
  margin-top: -370px;
  /*   height: 1620px; */

  @include breakpoint(mobileonly) {
    clip-path: none;
  }
  @include breakpoint(minimobileonly) {
    clip-path: none;
  }
  @include breakpoint(tablet) {
    clip-path: none;
  }
  @include breakpoint(phablet) {
    clip-path: none;
  }

  &--subheader {
    margin-bottom: 10%;
    margin-top: 15%;
    font-size: 2rem;
    font-weight: 100;
    color: white;
  }

  &--text {
    text-align: left;
    font-size: 1.5rem;
    font-weight: 100;
    color: white;
  }
  &--image1 {
    position: absolute;
    top: 47%;
    left: 63%;
    @include breakpoint(mobileonly) {
      position: inherit;
      left: auto;

      /*    width: 100%; */
    }
    @include breakpoint(minimobileonly) {
      /*    width: 100%; */
      position: inherit;
      left: auto;
    }
    @include breakpoint(phablet) {
      position: inherit;

      /*    width: 100%; */
    }
    @include breakpoint(tablet) {
      /*    width: 100%; */
      position: inherit;
    }
  }
  img {
    @include breakpoint(laptop) {
      width: 100%;
    }
  }

  &--image2 {
    position: absolute;
    top: 49%;
    left: 70%;
    @include breakpoint(mobileonly) {
      position: inherit;
      left: auto;

      /*    width: 100%; */
    }
    @include breakpoint(minimobileonly) {
      /*    width: 100%; */
      position: inherit;
      left: auto;
    }
    @include breakpoint(phablet) {
      position: inherit;

      /*    width: 100%; */
    }
  }
  /* img {
      width: auto;;
      @include breakpoint(tablet) {
        width: auto;
      }
      @include breakpoint(phablet) {
        width: auto;
      }
    } */

  &--image3 {
    position: absolute;
    top: 55%;
    left: 83%;
    @include breakpoint(mobileonly) {
      position: inherit;
      left: auto;

      /*    width: 100%; */
    }
    @include breakpoint(minimobileonly) {
      /*    width: 100%; */
      position: inherit;
    }
    @include breakpoint(phablet) {
      position: inherit;

      /*    width: 100%; */
    }
  }

  /*    img {

      @include breakpoint(tablet) {
        width: auto;
      }
      @include breakpoint(phablet) {
        width: auto;
      }
    } */
}

.overlay {
  background-color: navy;
  opacity: 0.66;
}

.content {
  width: 80%;
  display: flex;
  flex-wrap: wrap;
  justify-content: center;
  align-items: center;
  margin: 0 auto;
  margin-top: 0px;
  padding-top: 400px;

  .heading-secondary {
    color: white;
    @include breakpoint(mobileonly) {
      font-size: 2rem;
    }
    @include breakpoint(minimobileonly) {
      font-size: 2rem;
    }
  }
}
///////////////////////////////////////////////////////////////
//////////////////////////////////////////GRID//////////////////////

.imagewrapper {
  background: red;
  margin: 0 auto;
  display: flex;
  flex-direction: row;
  justify-content: center;
  align-items: center;
  flex-wrap: wrap;
}

/* .text-wrapper {
  width: 50%;
}
 */
.wrapper-text {
  @include breakpoint(mobileonly) {
    padding-left: 20%;
    padding-right: 20%;
  }
  @include breakpoint(minimobileonly) {
    padding-left: 20%;
    padding-right: 20%;
  }
}

.row {
  max-width: $grid-width;
  color: $color-grey-dark;
  margin: 0 auto;
  //gutter

  /* &:last-child {
    margin-bottom: 0;
  } */

  //Without not it will select last child.
  // not does the opposite and takes everthing except the last child.
  &:not(:last-child) {
    margin-bottom: $gutter-vertical;
  }

  @include clearfix;

  /* [src] */

  /*  [alt="Logo"]{

  } */

  //Will select all where the class attribute starts with col
  [class^="col-"] {
    /*  background-color: orangered; */
    float: left;
    &:not(:last-child) {
      margin-right: $gutter-horizontal;
    }
  }

  //Will select any classes that contain this part col
  /*
  [class*="col-"]  */

  //Will select any class that ends with col dash

  /*   [class$="col-"] */
  .col-1-of-1 {
    width: 100%;
  }
  .col-1-of-2 {
    width: calc((100% - #{$gutter-horizontal}) / 2);
    @include breakpoint(mobileonly) {
      width: 100%;
    }
    @include breakpoint(minimobileonly) {
      width: 100%;
    }
    @include breakpoint(phablet) {
      width: 100%;
    }
    @include breakpoint(tablet) {
      width: 100%;
    }
    @include breakpoint(laptop) {
      width: calc((100% - #{$gutter-horizontal}) / 2);
    }
    @include breakpoint(desktop) {
      width: calc((100% - #{$gutter-horizontal}) / 2);
    }
  }

  .col-1-of-3 {
    width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    @include breakpoint(mobileonly) {
      width: 100%;
    }
    @include breakpoint(minimobileonly) {
      width: 100%;
    }
    @include breakpoint(phablet) {
      width: 100%;
    }
    @include breakpoint(tablet) {
      width: 100%;
    }
    @include breakpoint(laptop) {
      width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }
    @include breakpoint(desktop) {
      width: calc((100% - 2 * #{$gutter-horizontal}) / 3);
    }
  }

  .col-2-of-3 {
    width: calc(
      2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
    );
    @include breakpoint(mobileonly) {
      width: 100%;
    }
    @include breakpoint(minimobileonly) {
      width: 100%;
    }
    @include breakpoint(phablet) {
      width: 100%;
    }
    @include breakpoint(tablet) {
      width: 100%;
    }
    @include breakpoint(laptop) {
      width: calc(
        2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
      );
    }
    @include breakpoint(desktop) {
      width: calc(
        2 * ((100% - 2 * #{$gutter-horizontal}) / 3) + #{$gutter-horizontal}
      );
    }
  }

  .col-1-of-4 {
    width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    @include breakpoint(mobileonly) {
      width: 100%;
    }
    @include breakpoint(minimobileonly) {
      width: 100%;
    }
    @include breakpoint(phablet) {
      width: 100%;
    }
    @include breakpoint(tablet) {
      width: 100%;
    }
    @include breakpoint(laptop) {
      width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }
    @include breakpoint(desktop) {
      width: calc((100% - 3 * #{$gutter-horizontal}) / 4);
    }
  }
}

///////////////////////////////////////////////////////////////
/////////////////////ANIMATIONS////////////////////////////

@keyframes moveInLeft {
  0% {
    opacity: 0;
    transform: translateX(-100px);
  }
  80% {
    transform: translateX(10px);
  }
  100% {
    opacity: 1;
    transform: translateX(0px);
  }
}

@keyframes moveInRight {
  0% {
    opacity: 0;
    transform: translateX(100px);
  }
  80% {
    transform: translateX(-10px);
  }
  100% {
    opacity: 1;
    transform: translateX(0px);
  }
}

@keyframes gradient {
  0% {
    background-position: 0% 50%;
  }
  50% {
    background-position: 100% 50%;
  }
  100% {
    background-position: 0% 50%;
  }
}

@keyframes fadein {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}
